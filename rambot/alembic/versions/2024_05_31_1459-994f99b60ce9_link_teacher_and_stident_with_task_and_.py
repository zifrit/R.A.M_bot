"""link teacher and stident with task and lessons

Revision ID: 994f99b60ce9
Revises: 762416a7cb78
Create Date: 2024-05-31 14:59:47.055600

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "994f99b60ce9"
down_revision: Union[str, None] = "762416a7cb78"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "completed_lessons",
        sa.Column("teacher_id", sa.Integer(), nullable=False),
    )
    op.add_column(
        "completed_lessons",
        sa.Column("student_id", sa.Integer(), nullable=False),
    )
    op.create_foreign_key(
        None, "completed_lessons", "profiles_student", ["student_id"], ["id"]
    )
    op.create_foreign_key(
        None, "completed_lessons", "profiles_teacher", ["teacher_id"], ["id"]
    )
    op.add_column(
        "completed_tasks",
        sa.Column("student_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "completed_tasks_user_id_fkey", "completed_tasks", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "completed_tasks", "profiles_student", ["student_id"], ["id"]
    )
    op.drop_column("completed_tasks", "user_id")
    op.add_column(
        "lessons", sa.Column("teacher_id", sa.Integer(), nullable=False)
    )
    op.create_foreign_key(
        None, "lessons", "profiles_teacher", ["teacher_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "lessons", type_="foreignkey")
    op.drop_column("lessons", "teacher_id")
    op.add_column(
        "completed_tasks",
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "completed_tasks", type_="foreignkey")
    op.create_foreign_key(
        "completed_tasks_user_id_fkey",
        "completed_tasks",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_column("completed_tasks", "student_id")
    op.drop_constraint(None, "completed_lessons", type_="foreignkey")
    op.drop_constraint(None, "completed_lessons", type_="foreignkey")
    op.drop_column("completed_lessons", "student_id")
    op.drop_column("completed_lessons", "teacher_id")
    # ### end Alembic commands ###
