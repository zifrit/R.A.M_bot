"""rename completed_tasks > in_progress_tasks table

Revision ID: 64412e1ca034
Revises: 578dd1ba72f6
Create Date: 2024-06-05 18:16:13.504630

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "64412e1ca034"
down_revision: Union[str, None] = "578dd1ba72f6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "in_progress_tasks",
        sa.Column("task_type_id", sa.Integer(), nullable=False),
        sa.Column("completed_lesson_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("question", sa.TEXT(), nullable=False),
        sa.Column(
            "answer", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("system_verify", sa.Boolean(), nullable=False),
        sa.Column("teacher_verify", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["completed_lesson_id"],
            ["completed_lessons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["profiles_student.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_type_id"],
            ["task_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("completed_tasks")
    op.add_column(
        "completed_lessons", sa.Column("point", sa.Integer(), nullable=False)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("completed_lessons", "point")
    op.create_table(
        "completed_tasks",
        sa.Column(
            "task_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "answer",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "system_verify", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "teacher_verify", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "student_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("question", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "completed_lesson_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["completed_lesson_id"],
            ["completed_lessons.id"],
            name="completed_tasks_completed_lesson_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["profiles_student.id"],
            name="completed_tasks_student_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["task_type_id"],
            ["task_types.id"],
            name="completed_tasks_task_type_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="completed_tasks_pkey"),
    )
    op.drop_table("in_progress_tasks")
    # ### end Alembic commands ###
